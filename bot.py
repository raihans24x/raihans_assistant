import os
from dotenv import load_dotenv
load_dotenv()

from telegram.ext import Updater, CommandHandler
from transformers import pipeline
import logging

# Telegram Bot Token
TOKEN = os.getenv("BOT_TOKEN")

# Logging
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)

# Load text generation model
generator = pipeline("text-generation", model="distilgpt2")

# Handlers
def start(update, context):
    update.message.reply_text("‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã! ‡¶Ü‡¶Æ‡¶ø ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ AI ‡¶¨‡¶®‡ßç‡¶ß‡ßÅ RaihanBot ü§ñ‡•§ ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡¶ï‡¶∞‡ßã /ask ‡¶¶‡¶ø‡ßü‡ßá‡•§")

def help_command(update, context):
    update.message.reply_text("/ask ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡¶≤‡¶ø‡¶ñ‡ßã - ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶™‡¶æ‡¶¨‡ßá\n/start - ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßã\n/help - ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø")

def ask(update, context):
    user_input = ' '.join(context.args)
    if user_input:
        update.message.reply_text("‡¶è‡¶ï ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°... ‡¶≠‡¶æ‡¶¨‡¶õ‡¶ø!")
        result = generator(user_input, max_length=100, num_return_sequences=1)[0]['generated_text']
        update.message.reply_text(result)
    else:
        update.message.reply_text("‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡¶¶‡¶æ‡¶ì! ‡¶Ø‡ßá‡¶Æ‡¶®: /ask ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡ßá?")

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("help", help_command))
    dp.add_handler(CommandHandler("ask", ask))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
